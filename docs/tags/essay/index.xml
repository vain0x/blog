<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Essay on ベインのブログ</title>
    <link>https://vain0x.github.io/blog/tags/essay/</link>
    <description>Recent content in Essay on ベインのブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <managingEditor>vainzerox@gmail.com (ベイン)</managingEditor>
    <webMaster>vainzerox@gmail.com (ベイン)</webMaster>
    <lastBuildDate>Tue, 30 Jan 2018 22:40:38 +0000</lastBuildDate><atom:link href="https://vain0x.github.io/blog/tags/essay/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>『コミットメッセージに「プレフィックス」をつける』を検討した</title>
      <link>https://vain0x.github.io/blog/2018-01-30/commit-message-prefixes/</link>
      <pubDate>Tue, 30 Jan 2018 22:40:38 +0000</pubDate>
      <author>vainzerox@gmail.com (ベイン)</author>
      <guid>https://vain0x.github.io/blog/2018-01-30/commit-message-prefixes/</guid>
      <description>&lt;p&gt;Qiita で &lt;a href=&#34;https://qiita.com/numanomanu/items/45dd285b286a1f7280ed&#34;&gt;コミットメッセージに 「プレフィックス」 をつける&lt;/a&gt; というアイディアが紹介されていて、その効用の一つとして挙げられている:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;プレフィックスを意識しながら順序立てて機能を作成する癖が身につく&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;という点が、試験運用していて実際に魅力的だと感じた。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SQLの検索条件と検索項目の分離</title>
      <link>https://vain0x.github.io/blog/2018-01-05/sql-search-only-keys/</link>
      <pubDate>Fri, 05 Jan 2018 23:30:37 +0000</pubDate>
      <author>vainzerox@gmail.com (ベイン)</author>
      <guid>https://vain0x.github.io/blog/2018-01-05/sql-search-only-keys/</guid>
      <description>&lt;p&gt;複数の検索条件があるときに検索項目をselect句で毎回列挙するのがだるい問題について考えました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[C#] コンストラクタの自動生成 #1</title>
      <link>https://vain0x.github.io/blog/2017-12-04/csharp-constructor-generation-01/</link>
      <pubDate>Mon, 04 Dec 2017 00:31:05 +0000</pubDate>
      <author>vainzerox@gmail.com (ベイン)</author>
      <guid>https://vain0x.github.io/blog/2017-12-04/csharp-constructor-generation-01/</guid>
      <description>&lt;h2 id=&#34;要約&#34;&gt;要約&lt;/h2&gt;
&lt;p&gt;C# のフィールドや自動実装プロパティーの定義から、完全コンストラクターを自動生成したい。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>EnumerableTest(.NETの単体テストフレームワーク)の紹介と苦労話</title>
      <link>https://vain0x.github.io/blog/2017-03-21/enumerable-test/</link>
      <pubDate>Tue, 21 Mar 2017 13:39:33 +0000</pubDate>
      <author>vainzerox@gmail.com (ベイン)</author>
      <guid>https://vain0x.github.io/blog/2017-03-21/enumerable-test/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://github.com/vain0x/EnumerableTest&#34;&gt;EnumerableTest&lt;/a&gt; という .NET 向けの単体テストフレームワークを作成しました。&lt;/p&gt;
&lt;p&gt;具体的な使い方は &lt;a href=&#34;https://vain0x.github.io/EnumerableTest/articles/tutorials/walk-around.html&#34;&gt;チュートリアル&lt;/a&gt; を参照してもらうとして、ここでは宣伝的な内容と、実装時の苦労話、今後の展望について述べます。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
