<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rust on ベインのブログ</title>
    <link>https://vain0x.github.io/blog/tags/rust/</link>
    <description>Recent content in Rust on ベインのブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <managingEditor>vainzerox@gmail.com (ベイン)</managingEditor>
    <webMaster>vainzerox@gmail.com (ベイン)</webMaster>
    <lastBuildDate>Sat, 19 Sep 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://vain0x.github.io/blog/tags/rust/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>式指向構文が言語処理系にもたらす複雑性</title>
      <link>https://vain0x.github.io/blog/2020-09-19/complexity-from-expression-oriented-syntax/</link>
      <pubDate>Sat, 19 Sep 2020 00:00:00 +0000</pubDate>
      <author>vainzerox@gmail.com (ベイン)</author>
      <guid>https://vain0x.github.io/blog/2020-09-19/complexity-from-expression-oriented-syntax/</guid>
      <description>&lt;p&gt;式の中に分岐や反復、ジャンプを書ける構文を &lt;strong&gt;式指向の構文&lt;/strong&gt; と呼ぶことにする。
式指向の構文は便利な反面、言語に一定の複雑性を追加する。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>円周率チャレンジにアルゴリズムでチャレンジ</title>
      <link>https://vain0x.github.io/blog/2018-11-08/pi-challenge/</link>
      <pubDate>Thu, 08 Nov 2018 02:01:00 +0900</pubDate>
      <author>vainzerox@gmail.com (ベイン)</author>
      <guid>https://vain0x.github.io/blog/2018-11-08/pi-challenge/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://rirosi.net/plus2/&#34;&gt;円周率チャレンジ&lt;/a&gt; というゲームが流行中です！&lt;/p&gt;
&lt;p&gt;プログラムを使って良い解法を探索してみたので、考えたことを書いていきます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rustで競プロするときのプラクティス [2018秋]</title>
      <link>https://vain0x.github.io/blog/2018-10-07/rust-procon/</link>
      <pubDate>Sun, 07 Oct 2018 20:00:00 +0000</pubDate>
      <author>vainzerox@gmail.com (ベイン)</author>
      <guid>https://vain0x.github.io/blog/2018-10-07/rust-procon/</guid>
      <description>&lt;p&gt;競プロで Rust を使い始めて半年が過ぎました。いまの私のプラクティスを羅列的に書いていきます。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rustのクロージャで再帰してみた</title>
      <link>https://vain0x.github.io/blog/2018-06-28/recurse-rust-closure/</link>
      <pubDate>Thu, 28 Jun 2018 23:17:41 +0000</pubDate>
      <author>vainzerox@gmail.com (ベイン)</author>
      <guid>https://vain0x.github.io/blog/2018-06-28/recurse-rust-closure/</guid>
      <description>&lt;p&gt;クロージャを再帰呼び出しする方法を考えました。&lt;/p&gt;
&lt;p&gt;競技プログラミングではローカル変数を書き換えながら再帰する処理がよく出てきます。しかし Rust でそれを書こうとするとやや冗長になりがちです。&lt;/p&gt;
&lt;p&gt;本稿では小さなヘルパーを用意して記述を簡略化することを試みました。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
