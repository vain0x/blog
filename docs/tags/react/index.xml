<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React on ベインのブログ</title>
    <link>https://vain0x.github.io/blog/tags/react/</link>
    <description>Recent content in React on ベインのブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <managingEditor>vainzerox@gmail.com (ベイン)</managingEditor>
    <webMaster>vainzerox@gmail.com (ベイン)</webMaster>
    <lastBuildDate>Sun, 25 Feb 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://vain0x.github.io/blog/tags/react/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reactとインバリデーション</title>
      <link>https://vain0x.github.io/blog/2024-02-25/react-invalidation/</link>
      <pubDate>Sun, 25 Feb 2024 00:00:00 +0000</pubDate>
      <author>vainzerox@gmail.com (ベイン)</author>
      <guid>https://vain0x.github.io/blog/2024-02-25/react-invalidation/</guid>
      <description>&lt;p&gt;Reactでイベントハンドラを書くときのインバリデーション問題でしばらく混乱してしまっていたので、記事に書きました。この記事の結論は &lt;code&gt;use-event-callback&lt;/code&gt; です&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GUIアプリのルーティング・ページ遷移</title>
      <link>https://vain0x.github.io/blog/2021-05-31/gui-navigation/</link>
      <pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate>
      <author>vainzerox@gmail.com (ベイン)</author>
      <guid>https://vain0x.github.io/blog/2021-05-31/gui-navigation/</guid>
      <description>&lt;p&gt;GUIアプリは複数のページ (画面) を持つことがある。これに関してぼんやり考えて採用した実装方針を書く。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ReactのよさはUIが第一級なこと</title>
      <link>https://vain0x.github.io/blog/2020-09-18/react-as-first-class-ui/</link>
      <pubDate>Fri, 18 Sep 2020 00:00:00 +0000</pubDate>
      <author>vainzerox@gmail.com (ベイン)</author>
      <guid>https://vain0x.github.io/blog/2020-09-18/react-as-first-class-ui/</guid>
      <description>&lt;p&gt;……という気がする。UI に関して何かやりたいときに必ずしも React の機能に頼らなくても、TypeScript の言語機能で書けて、そのまま型がつく、ということが多い。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
