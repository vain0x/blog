<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>エッセイ on ベインのブログ</title>
    <link>https://vain0x.github.io/blog/tags/%E3%82%A8%E3%83%83%E3%82%BB%E3%82%A4/</link>
    <description>Recent content in エッセイ on ベインのブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <managingEditor>vainzerox@gmail.com (ベイン)</managingEditor>
    <webMaster>vainzerox@gmail.com (ベイン)</webMaster>
    <lastBuildDate>Sat, 26 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://vain0x.github.io/blog/tags/%E3%82%A8%E3%83%83%E3%82%BB%E3%82%A4/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>値とストレージの区別</title>
      <link>https://vain0x.github.io/blog/2021-06-26/value-vs-storage/</link>
      <pubDate>Sat, 26 Jun 2021 00:00:00 +0000</pubDate>
      <author>vainzerox@gmail.com (ベイン)</author>
      <guid>https://vain0x.github.io/blog/2021-06-26/value-vs-storage/</guid>
      <description>&lt;p&gt;値と値を配置する場所(ストレージ)を区別することで有名な問題を簡単に説明できることを述べる。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GUIアプリのルーティング・ページ遷移</title>
      <link>https://vain0x.github.io/blog/2021-05-31/gui-navigation/</link>
      <pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate>
      <author>vainzerox@gmail.com (ベイン)</author>
      <guid>https://vain0x.github.io/blog/2021-05-31/gui-navigation/</guid>
      <description>&lt;p&gt;GUIアプリは複数のページ (画面) を持つことがある。これに関してぼんやり考えて採用した実装方針を書く。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>判別共用体が共通フィールドを持てたら嬉しい</title>
      <link>https://vain0x.github.io/blog/2021-04-24/shared-fields-in-discriminated-unions/</link>
      <pubDate>Sat, 24 Apr 2021 00:00:00 +0000</pubDate>
      <author>vainzerox@gmail.com (ベイン)</author>
      <guid>https://vain0x.github.io/blog/2021-04-24/shared-fields-in-discriminated-unions/</guid>
      <description>&lt;p&gt;判別共用体のすべてのバリアントに同じデータを持たせたいことがあるが、F# だとめんどい。
TypeScriptだと楽にできて嬉しい。
処理系の実装方針を考えてみたが、利用頻度のわりに量が多い気がしてきた、という話。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>関数型プログラミング言語の構文は「すべてが式」ではない</title>
      <link>https://vain0x.github.io/blog/2021-03-30/nonexpression-syntax-in-functional-programming-language/</link>
      <pubDate>Tue, 30 Mar 2021 00:00:00 +0000</pubDate>
      <author>vainzerox@gmail.com (ベイン)</author>
      <guid>https://vain0x.github.io/blog/2021-03-30/nonexpression-syntax-in-functional-programming-language/</guid>
      <description>&lt;p&gt;関数型プログラミング言語の構文は「すべてが式」であるという標語がしばしばみられるが、これはいいすぎ。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ミローネ言語の開発用にビルドツールninjaを使っている感想など</title>
      <link>https://vain0x.github.io/blog/2021-03-29/ninja-thoughts/</link>
      <pubDate>Mon, 29 Mar 2021 00:00:00 +0000</pubDate>
      <author>vainzerox@gmail.com (ベイン)</author>
      <guid>https://vain0x.github.io/blog/2021-03-29/ninja-thoughts/</guid>
      <description>&lt;p&gt;ミローネ言語の開発にビルドツールninjaを使いはじめて、それなりに時間がたったので、雑感を記事に書いておく。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ミローネ言語コンパイラ・HSP3開発ツール群の振り返りと今後の構想</title>
      <link>https://vain0x.github.io/blog/2020-01-11/after-milone-and-ginger/</link>
      <pubDate>Sat, 11 Jan 2020 00:00:00 +0000</pubDate>
      <author>vainzerox@gmail.com (ベイン)</author>
      <guid>https://vain0x.github.io/blog/2020-01-11/after-milone-and-ginger/</guid>
      <description>&lt;p&gt;2019年、ミローネ言語コンパイラや HSP3 GINGER (HSP3 言語の LSP やデバッガなど) を開発した経験に基づく、今後の展開の構想について。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>インテリセンス快適な構文とAPI</title>
      <link>https://vain0x.github.io/blog/2018-01-13/intellisense-comfortable/</link>
      <pubDate>Sat, 13 Jan 2018 23:08:23 +0000</pubDate>
      <author>vainzerox@gmail.com (ベイン)</author>
      <guid>https://vain0x.github.io/blog/2018-01-13/intellisense-comfortable/</guid>
      <description>&lt;p&gt;インテリセンスの快適さと言語の構文に関するエッセイ。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
